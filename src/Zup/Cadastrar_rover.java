package Zup;

import java.util.ArrayList;
import javax.swing.JComboBox;
import javax.swing.JOptionPane;
import javax.swing.JTable;
import javax.swing.JTextField;
import javax.swing.table.DefaultTableModel;

public class Cadastrar_rover extends javax.swing.JFrame {

    private int tamanhoX;
    private int tamanhoY;
    private Rover[][] campo;
    private ArrayList<Rover> arrayRover = new ArrayList<>();

    public Cadastrar_rover(int x, int y) {
        initComponents();
        this.tamanhoX = x;
        this.tamanhoY = y;
        campo = new Rover[x + 1][y + 1];
    }

    public Cadastrar_rover() {
        initComponents();

    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jScrollPane2 = new javax.swing.JScrollPane();
        jTextArea1 = new javax.swing.JTextArea();
        jLabel2 = new javax.swing.JLabel();
        jLabel1 = new javax.swing.JLabel();
        jLabel3 = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        jLabel5 = new javax.swing.JLabel();
        btt_cadastrar = new javax.swing.JButton();
        text_nome = new javax.swing.JTextField();
        text_coordenadaX = new javax.swing.JTextField();
        text_coordenadaY = new javax.swing.JTextField();
        jScrollPane1 = new javax.swing.JScrollPane();
        rovers_table = new javax.swing.JTable();
        combo_sentido = new javax.swing.JComboBox();
        jLabel6 = new javax.swing.JLabel();
        text_instrucoes = new javax.swing.JTextField();
        btt_navegar = new javax.swing.JButton();
        btt_excluir = new javax.swing.JButton();
        btt_voltar = new javax.swing.JButton();
        jScrollPane3 = new javax.swing.JScrollPane();
        jTextArea2 = new javax.swing.JTextArea();

        jTextArea1.setColumns(20);
        jTextArea1.setRows(5);
        jScrollPane2.setViewportView(jTextArea1);

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);
        setTitle("Cadastrar Rover");
        setResizable(false);

        jLabel2.setFont(new java.awt.Font("Tahoma", 1, 14)); // NOI18N
        jLabel2.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel2.setText("Cadastrar Rover");

        jLabel1.setText("Nome do Rover:");

        jLabel3.setText("Coordenada inicial X:");

        jLabel4.setText("Coordenada inicial Y:");

        jLabel5.setText("Sentido  inicial:");

        btt_cadastrar.setText("Cadastrar ");
        btt_cadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_cadastrarActionPerformed(evt);
            }
        });

        text_nome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                text_nomeActionPerformed(evt);
            }
        });

        rovers_table.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {

            },
            new String [] {
                "Nome", "Coordenada X", "Coordenada Y", "Sentido", "Instruções"
            }
        ) {
            boolean[] canEdit = new boolean [] {
                false, false, false, false, false
            };

            public boolean isCellEditable(int rowIndex, int columnIndex) {
                return canEdit [columnIndex];
            }
        });
        jScrollPane1.setViewportView(rovers_table);

        combo_sentido.setModel(new javax.swing.DefaultComboBoxModel(new String[] { "Selecione", "N", "S", "E", "W" }));
        combo_sentido.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                combo_sentidoActionPerformed(evt);
            }
        });

        jLabel6.setText("Instruções:");

        btt_navegar.setText("Navegar");
        btt_navegar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_navegarActionPerformed(evt);
            }
        });

        btt_excluir.setText("Excluir");
        btt_excluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_excluirActionPerformed(evt);
            }
        });

        btt_voltar.setText("Voltar");
        btt_voltar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btt_voltarActionPerformed(evt);
            }
        });

        jTextArea2.setEditable(false);
        jTextArea2.setColumns(20);
        jTextArea2.setLineWrap(true);
        jTextArea2.setRows(8);
        jTextArea2.setText("Sentido inicial: \nN - Norte / S - Sul\nE - Leste / W - Oeste\n\nInstruções:\nM - Avança uma posição.\nL - Gira 90º para a esquerda.\nR - Gira 90º para a direita.");
        jTextArea2.setFocusable(false);
        jScrollPane3.setViewportView(jTextArea2);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(layout.createSequentialGroup()
                                .addGap(14, 14, 14)
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel4)
                                    .addComponent(jLabel5)))
                            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                                .addContainerGap()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel3, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel6, javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(jLabel1, javax.swing.GroupLayout.Alignment.TRAILING))))
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addGroup(layout.createSequentialGroup()
                                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(combo_sentido, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addComponent(text_instrucoes, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                        .addComponent(text_coordenadaY, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(text_coordenadaX, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE)
                                        .addComponent(text_nome, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                    .addComponent(btt_cadastrar, javax.swing.GroupLayout.PREFERRED_SIZE, 200, javax.swing.GroupLayout.PREFERRED_SIZE))
                                .addGap(0, 0, Short.MAX_VALUE))
                            .addGroup(layout.createSequentialGroup()
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, 259, javax.swing.GroupLayout.PREFERRED_SIZE))))
                    .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                            .addComponent(jScrollPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 608, Short.MAX_VALUE)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, layout.createSequentialGroup()
                                .addComponent(btt_voltar)
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addComponent(btt_excluir, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                                .addGap(14, 14, 14)
                                .addComponent(btt_navegar, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)))))
                .addContainerGap())
            .addComponent(jLabel2, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(11, 11, 11)
                .addComponent(jLabel2)
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jScrollPane3, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(layout.createSequentialGroup()
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_nome, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel1))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(jLabel3)
                            .addComponent(text_coordenadaX, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_coordenadaY, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel4))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(combo_sentido, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel5))
                        .addGap(6, 6, 6)
                        .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                            .addComponent(text_instrucoes, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                            .addComponent(jLabel6))
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(btt_cadastrar)))
                .addGap(14, 14, 14)
                .addComponent(jScrollPane1, javax.swing.GroupLayout.PREFERRED_SIZE, 147, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(btt_voltar)
                    .addComponent(btt_navegar)
                    .addComponent(btt_excluir))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void btt_cadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_cadastrarActionPerformed

        boolean verifica = true;

        if (getNome().getText().isEmpty() || getText_coordenadaX().getText().isEmpty()
                || getText_coordenadaY().getText().isEmpty() || getIntrucoes().getText().isEmpty()
                || getCombo_sentido().getSelectedIndex() == 0) {

            JOptionPane.showMessageDialog(null, "Preencha todos os campos!");

        } else {

            try {
                String nome = getNome().getText().trim();
                int coordenadaX = Integer.parseInt(getText_coordenadaX().getText());
                int coordenadaY = Integer.parseInt(getText_coordenadaY().getText());
                String sentido = getCombo_sentido().getSelectedItem().toString();
                String instrucoes = getIntrucoes().getText().trim();

                if (coordenadaX <= getTamanhoX() && coordenadaY <= getTamanhoY()) { // verifica se o rover não está sendo inserido forá do planalto

                    if (coordenadaX >= 0 && coordenadaY >= 0) {  // verifica se as coordenadas são maiores que zero

                        String inst = instrucoes.toUpperCase(); // passando as instruções para maiúsculas

                        for (int i = 0; i < inst.length(); i++) {  // verifica se as intruções corresponde ao padrão definido 
                            char c = inst.charAt(i);
                            if (c != 'M' && c != 'L' && c != 'R') {
                                JOptionPane.showMessageDialog(null, "As instruções: " + inst + " não corresponde ao padrão!");
                                verifica = false;
                                break;
                            }
                        }

                        if (verifica) { // controla se as instruções estão corretas 

                            DefaultTableModel val = (DefaultTableModel) rovers_table.getModel();

                            val.addRow(new String[]{nome, String.valueOf(coordenadaX), String.valueOf(coordenadaY), sentido, inst});

                            Rover rover = new Rover(nome, coordenadaX, coordenadaY, sentido, inst);

                            arrayRover.add(rover); // add no array de rovers

                            campo[coordenadaX][coordenadaY] = rover; // add o rover no planalto

                            getNome().setText("");
                            getText_coordenadaX().setText("");
                            getText_coordenadaY().setText("");
                            getCombo_sentido().setSelectedIndex(0);
                            getIntrucoes().setText("");

                            getNome().requestFocus();

                        }

                    } else {

                        JOptionPane.showMessageDialog(null, "Entre com números maiores que zero!");

                    }

                } else {
                    JOptionPane.showMessageDialog(null, "Coordenada X ou Y está maior do que o campo de navegação! Tamanho do campo atual: " + getTamanhoX() + " x " + getTamanhoY());
                }

            } catch (NumberFormatException nfe) {
                JOptionPane.showMessageDialog(null, "Entre com números inteiros! Nas Coordenadas X e Y!");

                getNome().requestFocus();
            }
        }


    }//GEN-LAST:event_btt_cadastrarActionPerformed

    private void text_nomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_text_nomeActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_text_nomeActionPerformed

    private void combo_sentidoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_combo_sentidoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_combo_sentidoActionPerformed

    private void btt_navegarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_navegarActionPerformed

        if (!arrayRover.isEmpty()) {
            Resultado_rover resultado_rover = new Resultado_rover(arrayRover, campo); // passando o arrayRover e o planalto
            resultado_rover.setVisible(true);
            resultado_rover.navegar();
            dispose();
        } else {
            JOptionPane.showMessageDialog(null, "Cadastre pelo menos um rover!");
        }


    }//GEN-LAST:event_btt_navegarActionPerformed

    private void btt_excluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_excluirActionPerformed

        try {
            if (!arrayRover.isEmpty()) {
                arrayRover.remove(rovers_table.getSelectedRow());
                ((DefaultTableModel) rovers_table.getModel()).removeRow(rovers_table.getSelectedRow());
            } else {

                JOptionPane.showMessageDialog(null, "Não tem rover para exclusão!");
            }

        } catch (Exception e) {

            JOptionPane.showMessageDialog(null, "Selecione uma linha para excluir!");
        }


    }//GEN-LAST:event_btt_excluirActionPerformed

    private void btt_voltarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btt_voltarActionPerformed
        dispose();
        Inicial frame = new Inicial();
        frame.setVisible(true);
    }//GEN-LAST:event_btt_voltarActionPerformed

    public JTextField getText_coordenadaX() {
        return text_coordenadaX;
    }

    public void setText_coordenadaX(JTextField text_coordenadaX) {
        this.text_coordenadaX = text_coordenadaX;
    }

    public JTextField getText_coordenadaY() {
        return text_coordenadaY;
    }

    public void setText_coordenadaY(JTextField text_coordenadaY) {
        this.text_coordenadaY = text_coordenadaY;
    }

    public JTextField getNome() {
        return text_nome;
    }

    public void setNome(JTextField nome) {
        this.text_nome = nome;
    }

    public JTextField getIntrucoes() {
        return text_instrucoes;
    }

    public void setIntrucoes(JTextField intrucoes) {
        this.text_instrucoes = intrucoes;
    }

    public JTable getRovers_table() {
        return rovers_table;
    }

    public void setRovers_table(JTable rovers_table) {
        this.rovers_table = rovers_table;
    }

    public int getTamanhoX() {
        return tamanhoX;
    }

    public void setTamanhoX(int tamanhoX) {
        this.tamanhoX = tamanhoX;
    }

    public int getTamanhoY() {
        return tamanhoY;
    }

    public void setTamanhoY(int tamanhoY) {
        this.tamanhoY = tamanhoY;
    }

    public JComboBox getCombo_sentido() {
        return combo_sentido;
    }

    public void setCombo_sentido(JComboBox combo_sentido) {
        this.combo_sentido = combo_sentido;
    }

    /**
     * @param args the command line arguments
     */

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btt_cadastrar;
    private javax.swing.JButton btt_excluir;
    private javax.swing.JButton btt_navegar;
    private javax.swing.JButton btt_voltar;
    private javax.swing.JComboBox combo_sentido;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JScrollPane jScrollPane2;
    private javax.swing.JScrollPane jScrollPane3;
    private javax.swing.JTextArea jTextArea1;
    private javax.swing.JTextArea jTextArea2;
    private javax.swing.JTable rovers_table;
    private javax.swing.JTextField text_coordenadaX;
    private javax.swing.JTextField text_coordenadaY;
    private javax.swing.JTextField text_instrucoes;
    private javax.swing.JTextField text_nome;
    // End of variables declaration//GEN-END:variables
}
